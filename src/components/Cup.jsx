/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 .\public\models\cup_1.glb
*/

import React, { useRef } from 'react'
import { Decal, useGLTF, useTexture } from '@react-three/drei'
import { useLoader } from '@react-three/fiber';
import { TextureLoader } from 'three/src/loaders/TextureLoader';

//import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';
import * as THREE from 'three';
import { useCustomization } from '../context/Customization';


const Cup = (props) => {

  const {
    lid,
    lidColor,
    cupColor,
  } = useCustomization();

  const paperTextureProps = useTexture({
    map: '/react-glb-models-viewer/texture/paper/Paper_Wrinkled_001_basecolor.jpg',
    displacementMap: '/react-glb-models-viewer/texture/paper/Paper_Wrinkled_001_ambientOcclusion.jpg',
    normalMap: '/react-glb-models-viewer/texture/paper/Paper_Wrinkled_001_normal.jpg',
    roughnessMap: '/react-glb-models-viewer/texture/paper/Paper_Wrinkled_001_height.png',
    aoMap: '/react-glb-models-viewer/texture/paper/Paper_Wrinkled_001_roughness.jpg'
  });

  const plasticTextureProps = useTexture({
    map: '/react-glb-models-viewer/texture/plastic/Plastic_Rough_001_basecolor.jpg',
    displacementMap: '/react-glb-models-viewer/texture/plastic/Plastic_Rough_001_ambientOcclusion.jpg',
    normalMap: '/react-glb-models-viewer/texture/plastic/Plastic_Rough_001_normal.jpg',
    roughnessMap: '/react-glb-models-viewer/texture/plastic/Plastic_Rough_001_height.png',
    aoMap: '/react-glb-models-viewer/texture/plastic/Plastic_Rough_001_roughness.jpg'
  });

  //const texture = useTexture('/texture/1.jpg');

  paperTextureProps.map.repeat.set(2, 2);
  paperTextureProps.displacementMap.repeat.set(4, 4);
  paperTextureProps.normalMap.repeat.set(2, 2);
  paperTextureProps.roughnessMap.repeat.set(2, 2);
  paperTextureProps.aoMap.repeat.set(2, 2);

  paperTextureProps.map.wrapS = paperTextureProps.map.wrapT = THREE.RepeatWrapping;
  paperTextureProps.displacementMap.wrapS = paperTextureProps.displacementMap.wrapT = THREE.RepeatWrapping;
  paperTextureProps.normalMap.wrapS = paperTextureProps.normalMap.wrapT = THREE.RepeatWrapping;
  paperTextureProps.roughnessMap.wrapS = paperTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  paperTextureProps.aoMap.wrapS = paperTextureProps.aoMap.wrapT = THREE.RepeatWrapping;


  plasticTextureProps.map.repeat.set(2, 2);
  plasticTextureProps.displacementMap.repeat.set(2, 2);
  plasticTextureProps.normalMap.repeat.set(2, 2);
  plasticTextureProps.roughnessMap.repeat.set(2, 2);
  plasticTextureProps.aoMap.repeat.set(4, 4);

  plasticTextureProps.map.wrapS = plasticTextureProps.map.wrapT = THREE.RepeatWrapping;
  plasticTextureProps.displacementMap.wrapS = plasticTextureProps.displacementMap.wrapT = THREE.RepeatWrapping;
  plasticTextureProps.normalMap.wrapS = plasticTextureProps.normalMap.wrapT = THREE.RepeatWrapping;
  plasticTextureProps.roughnessMap.wrapS = plasticTextureProps.roughnessMap.wrapT = THREE.RepeatWrapping;
  plasticTextureProps.aoMap.wrapS = plasticTextureProps.aoMap.wrapT = THREE.RepeatWrapping;




  const { nodes, materials } = useGLTF('/react-glb-models-viewer/models/cup_1.glb')
  
  return (
    <group {...props} dispose={null}>
      <group rotation={[Math.PI / 2, 0, 0]} scale={0.04} >
        <mesh geometry={nodes.coffee_with_sugar_1.geometry} dispose={null}>
        <meshStandardMaterial 
          map={paperTextureProps.normalMap}
          color={cupColor.color}
        />
        </mesh>
        <mesh geometry={nodes.coffee_with_sugar_2.geometry} visible={lid}>
          <meshStandardMaterial 
          roughnessMap={plasticTextureProps.roughnessMap}
          color={lidColor.color}/>
        </mesh>
      </group>
    </group>
  )
}

useGLTF.preload('/react-glb-models-viewer/models/cup_1.glb')    
//<primitive object={gltf.scene} />  material={materials.Material} <meshStandardMaterial />   <meshStandardMaterial {...plasticTextureProps}/>

export default Cup;