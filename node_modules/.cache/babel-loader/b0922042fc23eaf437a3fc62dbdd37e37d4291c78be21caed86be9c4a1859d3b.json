{"ast":null,"code":"import * as MathUtils from './MathUtils.js';\nclass Vector2 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    Vector2.prototype.isVector2 = true;\n    this.x = x;\n    this.y = y;\n  }\n  get width() {\n    return this.x;\n  }\n  set width(value) {\n    this.x = value;\n  }\n  get height() {\n    return this.y;\n  }\n  set height(value) {\n    this.y = value;\n  }\n  set(x, y) {\n    this.x = x;\n    this.y = y;\n    return this;\n  }\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    return this;\n  }\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone() {\n    return new this.constructor(this.x, this.y);\n  }\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    return this;\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    return this;\n  }\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    return this;\n  }\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    return this;\n  }\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    return this;\n  }\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    return this;\n  }\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    return this;\n  }\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    return this;\n  }\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    return this;\n  }\n  divide(v) {\n    this.x /= v.x;\n    this.y /= v.y;\n    return this;\n  }\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n  applyMatrix3(m) {\n    const x = this.x,\n      y = this.y;\n    const e = m.elements;\n    this.x = e[0] * x + e[3] * y + e[6];\n    this.y = e[1] * x + e[4] * y + e[7];\n    return this;\n  }\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    return this;\n  }\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    return this;\n  }\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    return this;\n  }\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    return this;\n  }\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  }\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    return this;\n  }\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    return this;\n  }\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    return this;\n  }\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    return this;\n  }\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    return this;\n  }\n  dot(v) {\n    return this.x * v.x + this.y * v.y;\n  }\n  cross(v) {\n    return this.x * v.y - this.y * v.x;\n  }\n  lengthSq() {\n    return this.x * this.x + this.y * this.y;\n  }\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y);\n  }\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n  angle() {\n    // computes the angle in radians with respect to the positive x-axis\n\n    const angle = Math.atan2(-this.y, -this.x) + Math.PI;\n    return angle;\n  }\n  angleTo(v) {\n    const denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n    if (denominator === 0) return Math.PI / 2;\n    const theta = this.dot(v) / denominator;\n\n    // clamp, to handle numerical problems\n\n    return Math.acos(MathUtils.clamp(theta, -1, 1));\n  }\n  distanceTo(v) {\n    return Math.sqrt(this.distanceToSquared(v));\n  }\n  distanceToSquared(v) {\n    const dx = this.x - v.x,\n      dy = this.y - v.y;\n    return dx * dx + dy * dy;\n  }\n  manhattanDistanceTo(v) {\n    return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n  }\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    return this;\n  }\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    return this;\n  }\n  equals(v) {\n    return v.x === this.x && v.y === this.y;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    return this;\n  }\n  rotateAround(center, angle) {\n    const c = Math.cos(angle),\n      s = Math.sin(angle);\n    const x = this.x - center.x;\n    const y = this.y - center.y;\n    this.x = x * c - y * s + center.x;\n    this.y = x * s + y * c + center.y;\n    return this;\n  }\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    return this;\n  }\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n  }\n}\nexport { Vector2 };","map":{"version":3,"names":["MathUtils","Vector2","constructor","x","arguments","length","undefined","y","prototype","isVector2","width","value","height","set","setScalar","scalar","setX","setY","setComponent","index","Error","getComponent","clone","copy","v","add","addScalar","s","addVectors","a","b","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","m","e","elements","min","Math","max","clamp","clampScalar","minVal","maxVal","clampLength","floor","ceil","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","PI","angleTo","denominator","theta","acos","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","random","Symbol","iterator"],"sources":["/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/node_modules/three/src/math/Vector2.js"],"sourcesContent":["import * as MathUtils from './MathUtils.js';\n\nclass Vector2 {\n\n\tconstructor( x = 0, y = 0 ) {\n\n\t\tVector2.prototype.isVector2 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.x;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.x = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.y;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.y = value;\n\n\t}\n\n\tset( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tdivide( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tapplyMatrix3( m ) {\n\n\t\tconst x = this.x, y = this.y;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t}\n\n\tcross( v ) {\n\n\t\treturn this.x * v.y - this.y * v.x;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tangle() {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tconst angle = Math.atan2( - this.y, - this.x ) + Math.PI;\n\n\t\treturn angle;\n\n\t}\n\n\tangleTo( v ) {\n\n\t\tconst denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\tif ( denominator === 0 ) return Math.PI / 2;\n\n\t\tconst theta = this.dot( v ) / denominator;\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( MathUtils.clamp( theta, - 1, 1 ) );\n\n\t}\n\n\tdistanceTo( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t}\n\n\tdistanceToSquared( v ) {\n\n\t\tconst dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t}\n\n\tmanhattanDistanceTo( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t}\n\n\trotateAround( center, angle ) {\n\n\t\tconst c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tconst x = this.x - center.x;\n\t\tconst y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\n\t}\n\n}\n\nexport { Vector2 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}