{"ast":null,"code":"import React,{useRef,useState}from\"react\";import styles from'./rectangle-cropper.module.css';import Cropper,{ReactCropperElement}from\"react-cropper\";import\"cropperjs/dist/cropper.css\";import src from'../../media/1.jpg';import{jsx as _jsx}from\"react/jsx-runtime\";var RectangleCropper=function RectangleCropper(props){var ratio=props.ratio,serface=props.serface,setSerface=props.setSerface;var cropperRef=useRef(null);var onCrop=function onCrop(){var _cropperRef$current;var cropper=(_cropperRef$current=cropperRef.current)===null||_cropperRef$current===void 0?void 0:_cropperRef$current.cropper;setSerface(cropper.getCroppedCanvas().toDataURL());//    console.log(cropper.getCroppedCanvas().toDataURL());\n};//    <div className={styles['cropper']}>\nreturn/*#__PURE__*/_jsx(Cropper,{src:serface?serface:src// Cropper.js options\n,initialAspectRatio:ratio,aspectRatio:ratio,guides:false,crop:onCrop,ref:cropperRef,style:{width:\"100%\",height:\"100%\"}});};export default RectangleCropper;","map":{"version":3,"names":["React","useRef","useState","styles","Cropper","ReactCropperElement","src","jsx","_jsx","RectangleCropper","props","ratio","serface","setSerface","cropperRef","onCrop","_cropperRef$current","cropper","current","getCroppedCanvas","toDataURL","initialAspectRatio","aspectRatio","guides","crop","ref","style","width","height"],"sources":["/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/components/rectangle-cropper/rectangle-cropper.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\nimport styles from './rectangle-cropper.module.css';\nimport Cropper, { ReactCropperElement } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\nimport src from '../../media/1.jpg';\n\nconst RectangleCropper= (props) => {\n\n  const {\n    ratio,\n    serface,\n    setSerface\n    } = props;\n  \n  const cropperRef = useRef(null);\n\n  const onCrop = () => {\n    const cropper = cropperRef.current?.cropper;\n    setSerface(cropper.getCroppedCanvas().toDataURL());\n//    console.log(cropper.getCroppedCanvas().toDataURL());\n  };\n//    <div className={styles['cropper']}>\n  return (\n\n      <Cropper\n        src={serface ? serface : src}\n        // Cropper.js options\n        initialAspectRatio={ratio}\n        aspectRatio={ratio}\n        guides={false}\n        crop={onCrop}\n        ref={cropperRef}\n        style={{width: `100%`, height: `100%`}}\n      />\n\n  );\n};\n\nexport default RectangleCropper;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CAC/C,MAAO,CAAAC,MAAM,KAAM,gCAAgC,CACnD,MAAO,CAAAC,OAAO,EAAIC,mBAAmB,KAAQ,eAAe,CAC5D,MAAO,4BAA4B,CAEnC,MAAO,CAAAC,GAAG,KAAM,mBAAmB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEpC,GAAM,CAAAC,gBAAgB,CAAE,QAAlB,CAAAA,gBAAgBA,CAAGC,KAAK,CAAK,CAEjC,GACE,CAAAC,KAAK,CAGDD,KAAK,CAHTC,KAAK,CACLC,OAAO,CAEHF,KAAK,CAFTE,OAAO,CACPC,UAAU,CACNH,KAAK,CADTG,UAAU,CAGZ,GAAM,CAAAC,UAAU,CAAGb,MAAM,CAAC,IAAI,CAAC,CAE/B,GAAM,CAAAc,MAAM,CAAG,QAAT,CAAAA,MAAMA,CAAA,CAAS,KAAAC,mBAAA,CACnB,GAAM,CAAAC,OAAO,EAAAD,mBAAA,CAAGF,UAAU,CAACI,OAAO,UAAAF,mBAAA,iBAAlBA,mBAAA,CAAoBC,OAAO,CAC3CJ,UAAU,CAACI,OAAO,CAACE,gBAAgB,EAAE,CAACC,SAAS,EAAE,CAAC,CACtD;AACE,CAAC,CACH;AACE,mBAEIZ,IAAA,CAACJ,OAAO,EACNE,GAAG,CAAEM,OAAO,CAAGA,OAAO,CAAGN,GACzB;AAAA,CACAe,kBAAkB,CAAEV,KAAM,CAC1BW,WAAW,CAAEX,KAAM,CACnBY,MAAM,CAAE,KAAM,CACdC,IAAI,CAAET,MAAO,CACbU,GAAG,CAAEX,UAAW,CAChBY,KAAK,CAAE,CAACC,KAAK,OAAQ,CAAEC,MAAM,OAAQ,CAAE,EACvC,CAGR,CAAC,CAED,cAAe,CAAAnB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}