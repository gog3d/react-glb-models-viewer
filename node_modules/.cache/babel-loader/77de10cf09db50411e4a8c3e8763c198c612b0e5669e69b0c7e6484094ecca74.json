{"ast":null,"code":"import _construct from \"/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/node_modules/@babel/runtime/helpers/esm/construct.js\";\nimport _toConsumableArray from \"/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\nvar tV0 = new THREE.Vector3();\nvar tV1 = new THREE.Vector3();\nvar tV2 = new THREE.Vector3();\nvar getPoint2 = function getPoint2(point3, camera, size) {\n  var widthHalf = size.width / 2;\n  var heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  var vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\nvar getPoint3 = function getPoint3(point2, camera, size) {\n  var zValue = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n  var vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\nvar calculateScaleFactor = function calculateScaleFactor(point3, radiusPx, camera, size) {\n  var point2 = getPoint2(tV2.copy(point3), camera, size);\n  var scale = 0;\n  for (var i = 0; i < 2; ++i) {\n    var point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    var point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n  return scale;\n};\nvar mL0 = new THREE.Matrix4();\nvar mW0 = new THREE.Matrix4();\nvar mP = new THREE.Matrix4();\nvar mPInv = new THREE.Matrix4();\nvar mW = new THREE.Matrix4();\nvar mL = new THREE.Matrix4();\nvar mL0Inv = new THREE.Matrix4();\nvar mdL = new THREE.Matrix4();\nvar bb = new THREE.Box3();\nvar bbObj = new THREE.Box3();\nvar vCenter = new THREE.Vector3();\nvar vSize = new THREE.Vector3();\nvar vAnchorOffset = new THREE.Vector3();\nvar vPosition = new THREE.Vector3();\nvar xDir = new THREE.Vector3(1, 0, 0);\nvar yDir = new THREE.Vector3(0, 1, 0);\nvar zDir = new THREE.Vector3(0, 0, 1);\nvar PivotControls = /*#__PURE__*/React.forwardRef(function (_ref, fRef) {\n  var matrix = _ref.matrix,\n    _onDragStart = _ref.onDragStart,\n    _onDrag = _ref.onDrag,\n    _onDragEnd = _ref.onDragEnd,\n    _ref$autoTransform = _ref.autoTransform,\n    autoTransform = _ref$autoTransform === void 0 ? true : _ref$autoTransform,\n    anchor = _ref.anchor,\n    _ref$disableAxes = _ref.disableAxes,\n    disableAxes = _ref$disableAxes === void 0 ? false : _ref$disableAxes,\n    _ref$disableSliders = _ref.disableSliders,\n    disableSliders = _ref$disableSliders === void 0 ? false : _ref$disableSliders,\n    _ref$disableRotations = _ref.disableRotations,\n    disableRotations = _ref$disableRotations === void 0 ? false : _ref$disableRotations,\n    _ref$activeAxes = _ref.activeAxes,\n    activeAxes = _ref$activeAxes === void 0 ? [true, true, true] : _ref$activeAxes,\n    _ref$offset = _ref.offset,\n    offset = _ref$offset === void 0 ? [0, 0, 0] : _ref$offset,\n    _ref$rotation = _ref.rotation,\n    rotation = _ref$rotation === void 0 ? [0, 0, 0] : _ref$rotation,\n    _ref$scale = _ref.scale,\n    scale = _ref$scale === void 0 ? 1 : _ref$scale,\n    _ref$lineWidth = _ref.lineWidth,\n    lineWidth = _ref$lineWidth === void 0 ? 4 : _ref$lineWidth,\n    _ref$fixed = _ref.fixed,\n    fixed = _ref$fixed === void 0 ? false : _ref$fixed,\n    translationLimits = _ref.translationLimits,\n    rotationLimits = _ref.rotationLimits,\n    _ref$depthTest = _ref.depthTest,\n    depthTest = _ref$depthTest === void 0 ? true : _ref$depthTest,\n    _ref$axisColors = _ref.axisColors,\n    axisColors = _ref$axisColors === void 0 ? ['#ff2060', '#20df80', '#2080ff'] : _ref$axisColors,\n    _ref$hoveredColor = _ref.hoveredColor,\n    hoveredColor = _ref$hoveredColor === void 0 ? '#ffff40' : _ref$hoveredColor,\n    _ref$displayValues = _ref.displayValues,\n    displayValues = _ref$displayValues === void 0 ? true : _ref$displayValues,\n    annotationsClass = _ref.annotationsClass,\n    _ref$opacity = _ref.opacity,\n    opacity = _ref$opacity === void 0 ? 1 : _ref$opacity,\n    _ref$visible = _ref.visible,\n    visible = _ref$visible === void 0 ? true : _ref$visible,\n    userData = _ref.userData,\n    children = _ref.children;\n  var invalidate = useThree(function (state) {\n    return state.invalidate;\n  });\n  var parentRef = React.useRef(null);\n  var ref = React.useRef(null);\n  var gizmoRef = React.useRef(null);\n  var childrenRef = React.useRef(null);\n  var translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(function () {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(function (obj) {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(_construct(THREE.Vector3, _toConsumableArray(anchor))).add(vCenter);\n    vPosition.set.apply(vPosition, _toConsumableArray(offset)).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  var config = React.useMemo(function () {\n    return {\n      onDragStart: function onDragStart(props) {\n        mL0.copy(ref.current.matrix);\n        mW0.copy(ref.current.matrixWorld);\n        _onDragStart && _onDragStart(props);\n        invalidate();\n      },\n      onDrag: function onDrag(mdW) {\n        mP.copy(parentRef.current.matrixWorld);\n        mPInv.copy(mP).invert(); // After applying the delta\n\n        mW.copy(mW0).premultiply(mdW);\n        mL.copy(mW).premultiply(mPInv);\n        mL0Inv.copy(mL0).invert();\n        mdL.copy(mL).multiply(mL0Inv);\n        if (autoTransform) ref.current.matrix.copy(mL);\n        _onDrag && _onDrag(mL, mdL, mW, mdW);\n        invalidate();\n      },\n      onDragEnd: function onDragEnd() {\n        if (_onDragEnd) _onDragEnd();\n        invalidate();\n      },\n      translation: translation,\n      translationLimits: translationLimits,\n      rotationLimits: rotationLimits,\n      axisColors: axisColors,\n      hoveredColor: hoveredColor,\n      opacity: opacity,\n      scale: scale,\n      lineWidth: lineWidth,\n      fixed: fixed,\n      displayValues: displayValues,\n      depthTest: depthTest,\n      userData: userData,\n      annotationsClass: annotationsClass\n    };\n  }, [_onDragStart, _onDrag, _onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed].concat(_toConsumableArray(axisColors), [hoveredColor, opacity, displayValues, userData, autoTransform, annotationsClass]));\n  var vec = new THREE.Vector3();\n  useFrame(function (state) {\n    if (fixed) {\n      var sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, function () {\n    return ref.current;\n  }, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\nexport { PivotControls, calculateScaleFactor };","map":{"version":3,"names":["THREE","React","useThree","useFrame","AxisArrow","PlaneSlider","AxisRotator","context","tV0","Vector3","tV1","tV2","getPoint2","point3","camera","size","widthHalf","width","heightHalf","height","updateMatrixWorld","vector","project","x","y","getPoint3","point2","zValue","arguments","length","undefined","set","unproject","calculateScaleFactor","radiusPx","copy","scale","i","point2off","setComponent","getComponent","point3off","z","Math","max","distanceTo","mL0","Matrix4","mW0","mP","mPInv","mW","mL","mL0Inv","mdL","bb","Box3","bbObj","vCenter","vSize","vAnchorOffset","vPosition","xDir","yDir","zDir","PivotControls","forwardRef","_ref","fRef","matrix","onDragStart","onDrag","onDragEnd","_ref$autoTransform","autoTransform","anchor","_ref$disableAxes","disableAxes","_ref$disableSliders","disableSliders","_ref$disableRotations","disableRotations","_ref$activeAxes","activeAxes","_ref$offset","offset","_ref$rotation","rotation","_ref$scale","_ref$lineWidth","lineWidth","_ref$fixed","fixed","translationLimits","rotationLimits","_ref$depthTest","depthTest","_ref$axisColors","axisColors","_ref$hoveredColor","hoveredColor","_ref$displayValues","displayValues","annotationsClass","_ref$opacity","opacity","_ref$visible","visible","userData","children","invalidate","state","parentRef","useRef","ref","gizmoRef","childrenRef","translation","useLayoutEffect","current","updateWorldMatrix","matrixWorld","invert","makeEmpty","traverse","obj","geometry","boundingBox","computeBoundingBox","premultiply","applyMatrix4","union","add","min","multiplyScalar","sub","multiply","_construct","_toConsumableArray","apply","position","config","useMemo","props","mdW","concat","vec","sf","getWorldPosition","_gizmoRef$current","_gizmoRef$current2","_gizmoRef$current3","setScalar","useImperativeHandle","createElement","Provider","value","matrixAutoUpdate","axis","direction","dir1","dir2"],"sources":["/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/node_modules/@react-three/drei/web/pivotControls/index.js"],"sourcesContent":["import * as THREE from 'three';\nimport * as React from 'react';\nimport { useThree, useFrame } from '@react-three/fiber';\nimport { AxisArrow } from './AxisArrow.js';\nimport { PlaneSlider } from './PlaneSlider.js';\nimport { AxisRotator } from './AxisRotator.js';\nimport { context } from './context.js';\n\nconst tV0 = new THREE.Vector3();\nconst tV1 = new THREE.Vector3();\nconst tV2 = new THREE.Vector3();\n\nconst getPoint2 = (point3, camera, size) => {\n  const widthHalf = size.width / 2;\n  const heightHalf = size.height / 2;\n  camera.updateMatrixWorld(false);\n  const vector = point3.project(camera);\n  vector.x = vector.x * widthHalf + widthHalf;\n  vector.y = -(vector.y * heightHalf) + heightHalf;\n  return vector;\n};\n\nconst getPoint3 = (point2, camera, size, zValue = 1) => {\n  const vector = tV0.set(point2.x / size.width * 2 - 1, -(point2.y / size.height) * 2 + 1, zValue);\n  vector.unproject(camera);\n  return vector;\n};\n\nconst calculateScaleFactor = (point3, radiusPx, camera, size) => {\n  const point2 = getPoint2(tV2.copy(point3), camera, size);\n  let scale = 0;\n\n  for (let i = 0; i < 2; ++i) {\n    const point2off = tV1.copy(point2).setComponent(i, point2.getComponent(i) + radiusPx);\n    const point3off = getPoint3(point2off, camera, size, point2off.z);\n    scale = Math.max(scale, point3.distanceTo(point3off));\n  }\n\n  return scale;\n};\nconst mL0 = new THREE.Matrix4();\nconst mW0 = new THREE.Matrix4();\nconst mP = new THREE.Matrix4();\nconst mPInv = new THREE.Matrix4();\nconst mW = new THREE.Matrix4();\nconst mL = new THREE.Matrix4();\nconst mL0Inv = new THREE.Matrix4();\nconst mdL = new THREE.Matrix4();\nconst bb = new THREE.Box3();\nconst bbObj = new THREE.Box3();\nconst vCenter = new THREE.Vector3();\nconst vSize = new THREE.Vector3();\nconst vAnchorOffset = new THREE.Vector3();\nconst vPosition = new THREE.Vector3();\nconst xDir = new THREE.Vector3(1, 0, 0);\nconst yDir = new THREE.Vector3(0, 1, 0);\nconst zDir = new THREE.Vector3(0, 0, 1);\nconst PivotControls = /*#__PURE__*/React.forwardRef(({\n  matrix,\n  onDragStart,\n  onDrag,\n  onDragEnd,\n  autoTransform = true,\n  anchor,\n  disableAxes = false,\n  disableSliders = false,\n  disableRotations = false,\n  activeAxes = [true, true, true],\n  offset = [0, 0, 0],\n  rotation = [0, 0, 0],\n  scale = 1,\n  lineWidth = 4,\n  fixed = false,\n  translationLimits,\n  rotationLimits,\n  depthTest = true,\n  axisColors = ['#ff2060', '#20df80', '#2080ff'],\n  hoveredColor = '#ffff40',\n  displayValues = true,\n  annotationsClass,\n  opacity = 1,\n  visible = true,\n  userData,\n  children\n}, fRef) => {\n  const invalidate = useThree(state => state.invalidate);\n  const parentRef = React.useRef(null);\n  const ref = React.useRef(null);\n  const gizmoRef = React.useRef(null);\n  const childrenRef = React.useRef(null);\n  const translation = React.useRef([0, 0, 0]);\n  React.useLayoutEffect(() => {\n    if (!anchor) return;\n    childrenRef.current.updateWorldMatrix(true, true);\n    mPInv.copy(childrenRef.current.matrixWorld).invert();\n    bb.makeEmpty();\n    childrenRef.current.traverse(obj => {\n      if (!obj.geometry) return;\n      if (!obj.geometry.boundingBox) obj.geometry.computeBoundingBox();\n      mL.copy(obj.matrixWorld).premultiply(mPInv);\n      bbObj.copy(obj.geometry.boundingBox);\n      bbObj.applyMatrix4(mL);\n      bb.union(bbObj);\n    });\n    vCenter.copy(bb.max).add(bb.min).multiplyScalar(0.5);\n    vSize.copy(bb.max).sub(bb.min).multiplyScalar(0.5);\n    vAnchorOffset.copy(vSize).multiply(new THREE.Vector3(...anchor)).add(vCenter);\n    vPosition.set(...offset).add(vAnchorOffset);\n    gizmoRef.current.position.copy(vPosition);\n    invalidate();\n  });\n  const config = React.useMemo(() => ({\n    onDragStart: props => {\n      mL0.copy(ref.current.matrix);\n      mW0.copy(ref.current.matrixWorld);\n      onDragStart && onDragStart(props);\n      invalidate();\n    },\n    onDrag: mdW => {\n      mP.copy(parentRef.current.matrixWorld);\n      mPInv.copy(mP).invert(); // After applying the delta\n\n      mW.copy(mW0).premultiply(mdW);\n      mL.copy(mW).premultiply(mPInv);\n      mL0Inv.copy(mL0).invert();\n      mdL.copy(mL).multiply(mL0Inv);\n      if (autoTransform) ref.current.matrix.copy(mL);\n      onDrag && onDrag(mL, mdL, mW, mdW);\n      invalidate();\n    },\n    onDragEnd: () => {\n      if (onDragEnd) onDragEnd();\n      invalidate();\n    },\n    translation,\n    translationLimits,\n    rotationLimits,\n    axisColors,\n    hoveredColor,\n    opacity,\n    scale,\n    lineWidth,\n    fixed,\n    displayValues,\n    depthTest,\n    userData,\n    annotationsClass\n  }), [onDragStart, onDrag, onDragEnd, translation, translationLimits, rotationLimits, depthTest, scale, lineWidth, fixed, ...axisColors, hoveredColor, opacity, displayValues, userData, autoTransform, annotationsClass]);\n  const vec = new THREE.Vector3();\n  useFrame(state => {\n    if (fixed) {\n      const sf = calculateScaleFactor(gizmoRef.current.getWorldPosition(vec), scale, state.camera, state.size);\n\n      if (gizmoRef.current) {\n        var _gizmoRef$current, _gizmoRef$current2, _gizmoRef$current3;\n\n        if (((_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.scale.x) !== sf || ((_gizmoRef$current2 = gizmoRef.current) == null ? void 0 : _gizmoRef$current2.scale.y) !== sf || ((_gizmoRef$current3 = gizmoRef.current) == null ? void 0 : _gizmoRef$current3.scale.z) !== sf) {\n          gizmoRef.current.scale.setScalar(sf);\n          state.invalidate();\n        }\n      }\n    }\n  });\n  React.useImperativeHandle(fRef, () => ref.current, []);\n  return /*#__PURE__*/React.createElement(context.Provider, {\n    value: config\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: parentRef\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref,\n    matrix: matrix,\n    matrixAutoUpdate: false\n  }, /*#__PURE__*/React.createElement(\"group\", {\n    visible: visible,\n    ref: gizmoRef,\n    position: offset,\n    rotation: rotation\n  }, !disableAxes && activeAxes[0] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 0,\n    direction: xDir\n  }), !disableAxes && activeAxes[1] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 1,\n    direction: yDir\n  }), !disableAxes && activeAxes[2] && /*#__PURE__*/React.createElement(AxisArrow, {\n    axis: 2,\n    direction: zDir\n  }), !disableSliders && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableSliders && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableSliders && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(PlaneSlider, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  }), !disableRotations && activeAxes[0] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 2,\n    dir1: xDir,\n    dir2: yDir\n  }), !disableRotations && activeAxes[0] && activeAxes[2] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 1,\n    dir1: zDir,\n    dir2: xDir\n  }), !disableRotations && activeAxes[2] && activeAxes[1] && /*#__PURE__*/React.createElement(AxisRotator, {\n    axis: 0,\n    dir1: yDir,\n    dir2: zDir\n  })), /*#__PURE__*/React.createElement(\"group\", {\n    ref: childrenRef\n  }, children))));\n});\n\nexport { PivotControls, calculateScaleFactor };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}