{"ast":null,"code":"var _jsxFileName = \"/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/context/customization.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState } from \"react\";\nimport wrapperColors from '../data/colors.json';\nimport defaultTexture from '../media/default.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomizationContext = /*#__PURE__*/createContext();\nexport const CustomizationProvider = props => {\n  _s();\n  const [lid, setLid] = useState(true);\n  const [lidColor, setLidColor] = useState(wrapperColors[0]);\n  const [lidTexture, setLidTexture] = useState(null);\n  const [cupColor, setCupColor] = useState(wrapperColors[0]);\n  const [cupTexture, setCupTexture] = useState({\n    image: null,\n    color: 'white',\n    visible: true,\n    crope: null\n  });\n  const [main, setMain] = useState({\n    image: null,\n    color: 'white',\n    visible: true,\n    crope: null\n  });\n  const [front, setFront] = useState({\n    image: null,\n    color: 'white',\n    visible: false,\n    crope: null\n  });\n  const [back, setBack] = useState({\n    image: null,\n    color: 'white',\n    visible: false,\n    crope: null\n  });\n  return /*#__PURE__*/_jsxDEV(CustomizationContext.Provider, {\n    value: {\n      lid,\n      setLid,\n      lidColor,\n      setLidColor,\n      lidTexture,\n      setLidTexture,\n      cupColor,\n      setCupColor,\n      cupTexture,\n      setCupTexture,\n      wrapperColors,\n      front,\n      setFront,\n      back,\n      setBack,\n      main,\n      setMain\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomizationProvider, \"lc/V0HJjHjtE/1itEftPFev4YLo=\");\n_c = CustomizationProvider;\nexport const useCustomization = () => {\n  _s2();\n  const context = useContext(CustomizationContext);\n  return context;\n};\n_s2(useCustomization, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"CustomizationProvider\");","map":{"version":3,"names":["createContext","useContext","useState","wrapperColors","defaultTexture","jsxDEV","_jsxDEV","CustomizationContext","CustomizationProvider","props","_s","lid","setLid","lidColor","setLidColor","lidTexture","setLidTexture","cupColor","setCupColor","cupTexture","setCupTexture","image","color","visible","crope","main","setMain","front","setFront","back","setBack","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCustomization","_s2","context","$RefreshReg$"],"sources":["/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/context/customization.jsx"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\nimport wrapperColors from '../data/colors.json';\nimport defaultTexture from '../media/default.png';\n\nconst CustomizationContext = createContext();\n\nexport const CustomizationProvider = (props) => {\n  const [lid, setLid] = useState(true);\n  const [lidColor, setLidColor] = useState(wrapperColors[0]);\n  const [lidTexture, setLidTexture] = useState(null);\n\n  const [cupColor, setCupColor] = useState(wrapperColors[0]);\n  const [cupTexture, setCupTexture] = useState(\n    {image: null, color: 'white', visible: true, crope: null}\n  );\n  const [main, setMain] = useState(\n    {image: null, color: 'white', visible: true, crope: null}\n  );\n  const [front, setFront] = useState(\n    {image: null, color: 'white', visible: false, crope: null}\n  );\n  const [back, setBack] = useState(\n    {image: null, color: 'white', visible: false, crope: null}\n  );\n\n  return (\n    <CustomizationContext.Provider\n      value={{\n        lid,\n        setLid,\n        lidColor,\n        setLidColor,\n        lidTexture,\n        setLidTexture,\n        cupColor,\n        setCupColor,\n        cupTexture,\n        setCupTexture,\n        wrapperColors,\n        front,\n        setFront,\n        back,\n        setBack,\n        main,\n        setMain\n      }}\n      >\n      {props.children}\n    </CustomizationContext.Provider>\n  );\n};\n\nexport const useCustomization = () => {\n  const context = useContext(CustomizationContext);\n  return context;\n};\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAC3D,OAAOC,aAAa,MAAM,qBAAqB;AAC/C,OAAOC,cAAc,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,oBAAoB,gBAAGP,aAAa,EAAE;AAE5C,OAAO,MAAMQ,qBAAqB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9C,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAACC,aAAa,CAAC,CAAC,CAAC,CAAC;EAC1D,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAC1C;IAACmB,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,OAAO;IAAEC,OAAO,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC1D;EACD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGxB,QAAQ,CAC9B;IAACmB,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,OAAO;IAAEC,OAAO,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC1D;EACD,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAG1B,QAAQ,CAChC;IAACmB,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,OAAO;IAAEC,OAAO,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC3D;EACD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAG5B,QAAQ,CAC9B;IAACmB,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE,OAAO;IAAEC,OAAO,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,CAC3D;EAED,oBACElB,OAAA,CAACC,oBAAoB,CAACwB,QAAQ;IAC5BC,KAAK,EAAE;MACLrB,GAAG;MACHC,MAAM;MACNC,QAAQ;MACRC,WAAW;MACXC,UAAU;MACVC,aAAa;MACbC,QAAQ;MACRC,WAAW;MACXC,UAAU;MACVC,aAAa;MACbjB,aAAa;MACbwB,KAAK;MACLC,QAAQ;MACRC,IAAI;MACJC,OAAO;MACPL,IAAI;MACJC;IACF,CAAE;IAAAO,QAAA,EAEDxB,KAAK,CAACwB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACe;AAEpC,CAAC;AAAC3B,EAAA,CA5CWF,qBAAqB;AAAA8B,EAAA,GAArB9B,qBAAqB;AA8ClC,OAAO,MAAM+B,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAMC,OAAO,GAAGxC,UAAU,CAACM,oBAAoB,CAAC;EAChD,OAAOkC,OAAO;AAChB,CAAC;AAACD,GAAA,CAHWD,gBAAgB;AAAA,IAAAD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}