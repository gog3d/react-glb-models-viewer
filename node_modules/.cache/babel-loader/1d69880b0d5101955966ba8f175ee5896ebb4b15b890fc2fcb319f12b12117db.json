{"ast":null,"code":"var _jsxFileName = \"/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/components/geometry/cup/cup.jsx\",\n  _s = $RefreshSig$();\n/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nCommand: npx gltfjsx@6.1.4 .\\public\\models\\cup_1.glb\n*/\n\nimport React, { useRef } from 'react';\nimport { Decal, useGLTF, useTexture } from '@react-three/drei';\nimport { useLoader } from '@react-three/fiber';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\n\n//import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport * as THREE from 'three';\nimport { useCustomization } from '../../../context/customization';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cup = props => {\n  _s();\n  const {\n    cup\n  } = useCustomization();\n  const paperTextureProps = useTexture({\n    map: '/texture/paper/Paper_Wrinkled_001_basecolor.jpg'\n  });\n  const plasticTextureProps = useTexture({\n    map: '/texture/plastic/Plastic_Rough_001_basecolor.jpg'\n  });\n\n  //const texture = useTexture('/texture/1.jpg');\n\n  paperTextureProps.map.repeat.set(2, 2);\n  paperTextureProps.map.wrapS = paperTextureProps.map.wrapT = THREE.RepeatWrapping;\n  plasticTextureProps.map.repeat.set(2, 2);\n  plasticTextureProps.map.wrapS = plasticTextureProps.map.wrapT = THREE.RepeatWrapping;\n  const {\n    nodes,\n    materials\n  } = useGLTF('/models/cup_1.glb');\n  return /*#__PURE__*/_jsxDEV(\"group\", {\n    ...props,\n    dispose: null,\n    \"position-y\": 0.1,\n    children: /*#__PURE__*/_jsxDEV(\"group\", {\n      rotation: [Math.PI / 2, 0, 0],\n      scale: 1,\n      children: [/*#__PURE__*/_jsxDEV(\"mesh\", {\n        geometry: nodes.coffee_with_sugar_1.geometry,\n        dispose: null,\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          map: paperTextureProps.normalMap,\n          color: cup.color\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n        geometry: nodes.coffee_with_sugar_2.geometry,\n        visible: true,\n        children: /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n          roughnessMap: plasticTextureProps.roughnessMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(Cup, \"6YJOglqJO+D2DkBtJ8LpQEZXk40=\", false, function () {\n  return [useCustomization, useTexture, useTexture, useGLTF];\n});\n_c = Cup;\nuseGLTF.preload('/models/cup_1.glb');\n//<primitive object={gltf.scene} />  material={materials.Material} <meshStandardMaterial />   <meshStandardMaterial {...plasticTextureProps}/>\n\nexport default Cup;\nvar _c;\n$RefreshReg$(_c, \"Cup\");","map":{"version":3,"names":["React","useRef","Decal","useGLTF","useTexture","useLoader","TextureLoader","THREE","useCustomization","jsxDEV","_jsxDEV","Cup","props","_s","cup","paperTextureProps","map","plasticTextureProps","repeat","set","wrapS","wrapT","RepeatWrapping","nodes","materials","dispose","children","rotation","Math","PI","scale","geometry","coffee_with_sugar_1","normalMap","color","fileName","_jsxFileName","lineNumber","columnNumber","coffee_with_sugar_2","visible","roughnessMap","_c","preload","$RefreshReg$"],"sources":["/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/components/geometry/cup/cup.jsx"],"sourcesContent":["/*\nAuto-generated by: https://github.com/pmndrs/gltfjsx\nCommand: npx gltfjsx@6.1.4 .\\public\\models\\cup_1.glb\n*/\n\nimport React, { useRef } from 'react'\nimport { Decal, useGLTF, useTexture } from '@react-three/drei'\nimport { useLoader } from '@react-three/fiber';\nimport { TextureLoader } from 'three/src/loaders/TextureLoader';\n\n//import { GLTFLoader } from 'three/addons/loaders/GLTFLoader.js';\nimport * as THREE from 'three';\nimport { useCustomization } from '../../../context/customization';\n\nconst Cup = (props) => {\n\n  const {\n    cup,\n  } = useCustomization();\n\n  const paperTextureProps = useTexture({\n    map: '/texture/paper/Paper_Wrinkled_001_basecolor.jpg',\n  });\n\n  const plasticTextureProps = useTexture({\n    map: '/texture/plastic/Plastic_Rough_001_basecolor.jpg',\n  });\n\n  //const texture = useTexture('/texture/1.jpg');\n\n  paperTextureProps.map.repeat.set(2, 2);\n\n  paperTextureProps.map.wrapS = paperTextureProps.map.wrapT = THREE.RepeatWrapping;\n\n  plasticTextureProps.map.repeat.set(2, 2);\n\n  plasticTextureProps.map.wrapS = plasticTextureProps.map.wrapT = THREE.RepeatWrapping;\n\n  const { nodes, materials } = useGLTF('/models/cup_1.glb')\n  \n  return (\n    <group {...props} dispose={null} position-y={0.1}>\n      <group rotation={[Math.PI / 2, 0, 0]} scale={1} >\n        <mesh geometry={nodes.coffee_with_sugar_1.geometry} dispose={null}>\n        <meshStandardMaterial \n          map={paperTextureProps.normalMap}\n          color={cup.color}\n        />\n        </mesh>\n        <mesh geometry={nodes.coffee_with_sugar_2.geometry} visible={true}>\n          <meshStandardMaterial \n            roughnessMap={plasticTextureProps.roughnessMap}\n          />\n        </mesh>\n      </group>\n    </group>\n  )\n}\n\nuseGLTF.preload('/models/cup_1.glb');\n//<primitive object={gltf.scene} />  material={materials.Material} <meshStandardMaterial />   <meshStandardMaterial {...plasticTextureProps}/>\n\nexport default Cup;"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,KAAK,EAAEC,OAAO,EAAEC,UAAU,QAAQ,mBAAmB;AAC9D,SAASC,SAAS,QAAQ,oBAAoB;AAC9C,SAASC,aAAa,QAAQ,iCAAiC;;AAE/D;AACA,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,gBAAgB,QAAQ,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,MAAMC,GAAG,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAErB,MAAM;IACJC;EACF,CAAC,GAAGN,gBAAgB,EAAE;EAEtB,MAAMO,iBAAiB,GAAGX,UAAU,CAAC;IACnCY,GAAG,EAAE;EACP,CAAC,CAAC;EAEF,MAAMC,mBAAmB,GAAGb,UAAU,CAAC;IACrCY,GAAG,EAAE;EACP,CAAC,CAAC;;EAEF;;EAEAD,iBAAiB,CAACC,GAAG,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAEtCJ,iBAAiB,CAACC,GAAG,CAACI,KAAK,GAAGL,iBAAiB,CAACC,GAAG,CAACK,KAAK,GAAGd,KAAK,CAACe,cAAc;EAEhFL,mBAAmB,CAACD,GAAG,CAACE,MAAM,CAACC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;EAExCF,mBAAmB,CAACD,GAAG,CAACI,KAAK,GAAGH,mBAAmB,CAACD,GAAG,CAACK,KAAK,GAAGd,KAAK,CAACe,cAAc;EAEpF,MAAM;IAAEC,KAAK;IAAEC;EAAU,CAAC,GAAGrB,OAAO,CAAC,mBAAmB,CAAC;EAEzD,oBACEO,OAAA;IAAA,GAAWE,KAAK;IAAEa,OAAO,EAAE,IAAK;IAAC,cAAY,GAAI;IAAAC,QAAA,eAC/ChB,OAAA;MAAOiB,QAAQ,EAAE,CAACC,IAAI,CAACC,EAAE,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;MAACC,KAAK,EAAE,CAAE;MAAAJ,QAAA,gBAC7ChB,OAAA;QAAMqB,QAAQ,EAAER,KAAK,CAACS,mBAAmB,CAACD,QAAS;QAACN,OAAO,EAAE,IAAK;QAAAC,QAAA,eAClEhB,OAAA;UACEM,GAAG,EAAED,iBAAiB,CAACkB,SAAU;UACjCC,KAAK,EAAEpB,GAAG,CAACoB;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MACjB;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACK,eACP5B,OAAA;QAAMqB,QAAQ,EAAER,KAAK,CAACgB,mBAAmB,CAACR,QAAS;QAACS,OAAO,EAAE,IAAK;QAAAd,QAAA,eAChEhB,OAAA;UACE+B,YAAY,EAAExB,mBAAmB,CAACwB;QAAa;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAC/C;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACG;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ,CAAC;AAAAzB,EAAA,CA3CKF,GAAG;EAAA,QAIHH,gBAAgB,EAEMJ,UAAU,EAIRA,UAAU,EAcTD,OAAO;AAAA;AAAAuC,EAAA,GAxBhC/B,GAAG;AA6CTR,OAAO,CAACwC,OAAO,CAAC,mBAAmB,CAAC;AACpC;;AAEA,eAAehC,GAAG;AAAC,IAAA+B,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}