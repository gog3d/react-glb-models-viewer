{"ast":null,"code":"var _jsxFileName = \"/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/components/experience/experience.jsx\";\nimport { Stage, OrbitControls, MeshReflectorMaterial, boxGeometry, Box, Cylinder, meshStandardMaterial } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Experience = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stage, {\n      intensity: 1.5,\n      environment: \"city\",\n      shadows: {\n        type: \"accumulative\",\n        color: \"#d9afd9\",\n        colorBlend: 2,\n        opacity: 2\n      },\n      adjustCamera: 2,\n      children: [/*#__PURE__*/_jsxDEV(Cylinder, {\n        args: [6, 4, 10, 50, 50, true, 0, 1 * Math.PI],\n        \"material-color\": 'red',\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Cylinder, {\n        args: [6, 4, 10, 50, 50, true, 1 * Math.PI, 1 * Math.PI],\n        \"material-color\": 'green',\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }, this), /*#__PURE__*/_jsxDEV(Cylinder, {\n        args: [6, 4, 10, 50, 50, false, 0 * Math.PI, 2 * Math.PI],\n        \"material-color\": 'blue',\n        visible: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n      makeDefault: true,\n      minPolarAngle: 0,\n      maxPolarAngle: Math.PI / 1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      rotation: [-Math.PI / 2, 0, 0],\n      \"position-y\": -5.3,\n      children: [/*#__PURE__*/_jsxDEV(\"planeGeometry\", {\n        args: [170, 170]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MeshReflectorMaterial, {\n        blur: [300, 100],\n        resolution: 1080,\n        mixBlur: 1,\n        mixStrength: 40,\n        roughness: 1,\n        depthScale: 0.2,\n        minDepthThreshold: 0.4,\n        maxDepthThreshold: 1.4,\n        color: \"#101010\",\n        metalness: 0.5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true);\n};\n_c = Experience;\nexport default Experience;\nvar _c;\n$RefreshReg$(_c, \"Experience\");","map":{"version":3,"names":["Stage","OrbitControls","MeshReflectorMaterial","boxGeometry","Box","Cylinder","meshStandardMaterial","jsxDEV","_jsxDEV","Fragment","_Fragment","Experience","children","intensity","environment","shadows","type","color","colorBlend","opacity","adjustCamera","args","Math","PI","visible","fileName","_jsxFileName","lineNumber","columnNumber","makeDefault","minPolarAngle","maxPolarAngle","rotation","blur","resolution","mixBlur","mixStrength","roughness","depthScale","minDepthThreshold","maxDepthThreshold","metalness","_c","$RefreshReg$"],"sources":["/home/gog3d/CODE/JS/1-projects/2-react/react-glb-models-viewer/src/components/experience/experience.jsx"],"sourcesContent":["import { \n      Stage, \n      OrbitControls, \n      MeshReflectorMaterial, \n      boxGeometry, \n      Box,\n      Cylinder,\n      meshStandardMaterial \n      } from '@react-three/drei';\n\nconst Experience = () => {\n  return (\n    <>\n     { <Stage\n        intensity={1.5}\n        environment=\"city\"\n        shadows={{\n          type: \"accumulative\",\n          color: \"#d9afd9\",\n          colorBlend: 2,\n          opacity: 2,\n        }}\n        adjustCamera={2}  \n      >\n\n   {     <Cylinder args={[6, 4, 10 ,50, 50, true, 0, 1*Math.PI]} material-color={'red'} visible={true}/>}\n   {     <Cylinder args={[6, 4, 10 ,50, 50, true, 1*Math.PI, 1*Math.PI]} material-color={'green'} visible={true}/>}\n   {     <Cylinder args={[6, 4, 10 ,50, 50, false, 0*Math.PI, 2*Math.PI]} material-color={'blue'} visible={true}/>}\n      </Stage>}\n\n      <OrbitControls\n        makeDefault\n        minPolarAngle={0}\n        maxPolarAngle={Math.PI / 1}\n      />\n      {<mesh  rotation={[-Math.PI / 2, 0, 0]} position-y={-5.3}>\n        <planeGeometry args={[170, 170]} />\n        <MeshReflectorMaterial\n          blur={[300, 100]}\n          resolution={1080}\n          mixBlur={1}\n          mixStrength={40}\n          roughness={1}\n          depthScale={0.2}\n          minDepthThreshold={0.4}\n          maxDepthThreshold={1.4}\n          color=\"#101010\"\n          metalness={0.5}\n        />\n      </mesh> }\n\n    </>\n  );\n};\n\nexport default Experience;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}